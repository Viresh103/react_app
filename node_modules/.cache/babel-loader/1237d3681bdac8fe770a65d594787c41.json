{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tesla/webd/html/assignment/myapp/src/component/notepad.js\";\nimport \"./notepad.css\";\nimport react from 'react';\n\nfunction Box(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [props.name, \":\", props.note, \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Box;\n\nclass Notepad extends react.Component {\n  constructor() {\n    super();\n\n    this.handler = () => {\n      if (this.tmp_title != \"\") {\n        let title = this.tmp_title;\n        let note = this.tmp_title.note;\n        console.log({\n          title,\n          note\n        });\n        this.setState({\n          list: this.list.push({\n            title,\n            note\n          }),\n          intext: !this.intext\n        });\n      }\n\n      this.tmp_title = \"\";\n      this.tmp_note = \"\"; // this.list.push({name:title,note:note});\n      // this.state.intext=!(this.state.intext);\n    };\n\n    this.state = {\n      list: [],\n      intext: true\n    };\n    this.change_handler = this.change_handler.bind(this);\n    this.change_handler1 = this.change_handler1.bind(this);\n    this.tmp_title = \"\";\n    this.tmp_note = \"\";\n  }\n\n  change_handler(event) {\n    this.tmp_title = event.target.value;\n  }\n\n  change_handler1(event) {\n    this.tmp_note = event.target.value;\n  }\n\n  render() {\n    console.log(this.tmp_title);\n\n    if (this.state.intext) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notepad_input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handler,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"text_input\",\n              type: \"text\",\n              placeholder: \"note title\",\n              onChange: this.change_handler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"text_input1\",\n              type: \"text\",\n              placeholder: \"note\",\n              onChange: this.change_handler1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"submit_btn\",\n              type: \"submit\",\n              value: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this);\n    } else {\n      let all_notes = [];\n      let n = this.state.list.size();\n\n      for (let i = n - 1; i >= 0; i--) {\n        all_notes.push( /*#__PURE__*/_jsxDEV(Box, {\n          note: this.list[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 32\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notepad_display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n}\n\nexport default Notepad;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["/home/tesla/webd/html/assignment/myapp/src/component/notepad.js"],"names":["react","Box","props","name","note","Notepad","Component","constructor","handler","tmp_title","title","console","log","setState","list","push","intext","tmp_note","state","change_handler","bind","change_handler1","event","target","value","render","all_notes","n","size","i"],"mappings":"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","sourcesContent":["import \"./notepad.css\";\nimport react from 'react';\n\nfunction Box(props){\n    return(\n        <div className=\"box\">\n            {props.name}:{props.note};\n        </div>\n    \n    )\n}\n\n\nclass Notepad extends react.Component{\n    constructor(){\n        super();\n        this.state={\n            list:[],\n            intext:true,\n        }\n        this.change_handler=this.change_handler.bind(this);\n        this.change_handler1=this.change_handler1.bind(this);\n        this.tmp_title=\"\";\n        this.tmp_note=\"\";\n    }\n   \n    handler=()=>{\n        \n        if(this.tmp_title!=\"\"){\n            let title=this.tmp_title;\n            let note=this.tmp_title.note;\n            console.log({title,note});\n            this.setState({\n                list:this.list.push({title,note}),\n                intext:!(this.intext),\n\n            })\n        }\n        this.tmp_title=\"\";\n        this.tmp_note=\"\";\n        // this.list.push({name:title,note:note});\n        // this.state.intext=!(this.state.intext);\n    \n    }\n\n\n    change_handler(event){\n           this.tmp_title=event.target.value;\n    }\n\n    change_handler1(event){\n        this.tmp_note=event.target.value;\n    }\n    render(){\n        console.log(this.tmp_title);\n        if(this.state.intext){\n           return(\n               <div id=\"notepad_input\">\n                   {/* <div id=\"notepad_title\">Notepad</div> */}\n                   <div id=\"form\">\n                    <form  onSubmit={this.handler}>\n                        <input  id=\"text_input\" type=\"text\" placeholder=\"note title\" onChange={this.change_handler}/>\n                        <input  id=\"text_input1\" type=\"text\" placeholder=\"note\" onChange={this.change_handler1}/>\n                        <input id=\"submit_btn\" type=\"submit\" value=\"submit\"/>\n                    </form>\n                   </div>\n                   \n               </div>\n           )\n        }else{\n            let all_notes=[];\n            let n=this.state.list.size();\n            for(let i=n-1;i>=0;i--){\n                all_notes.push(<Box note={this.list[i]}/>);\n            }\n            return (\n                 <div id=\"notepad_display\">\n                      \n                       \n                 </div>\n\n\n            )\n\n\n        }\n    }\n\n}\nexport default Notepad;"]},"metadata":{},"sourceType":"module"}